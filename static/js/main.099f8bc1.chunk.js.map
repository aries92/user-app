{"version":3,"sources":["constants/index.js","components/Country.js","components/UserSearch.js","App.js","index.js"],"names":["ADMIN_ROLES","crudadmin","readonlyadmin","Country","defaultCountry","disabled","useState","newCountry","setNewCountry","edit","setEdit","save","setSave","onChange","e","target","value","onClick","UserSearch","admin","search","setSearch","data","setData","defaultData","setDefaultData","localStorage","getItem","sort","setSort","sortData","a","b","lastname","localeCompare","useEffect","fetch","then","response","json","userData","users","map","d","i","id","htmlFor","type","length","filter","user","toLowerCase","includes","sortType","setItem","key","country","pageUrl","App","redirected","setRedirected","setAdmin","error","setError","success","setSuccess","window","location","hash","className","onSubmit","isValid","preventDefault","setTimeout","name","required","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.099f8bc1.chunk.js","sourcesContent":["export const ADMIN_ROLES = {\n  crudadmin: \"crudadmin\",\n  readonlyadmin: \"readonlyadmin\"\n};\n","import React, { useState } from \"react\";\n\nfunction Country({ defaultCountry, disabled }) {\n  const [newCountry, setNewCountry] = useState(\"\");\n  const [edit, setEdit] = useState(false);\n  const [save, setSave] = useState(false);\n\n  function handleEditClick() {\n    setEdit(!edit);\n  }\n\n  function handleCountryChange(e) {\n    if (e.target.value) {\n      setNewCountry(e.target.value);\n    }\n  }\n\n  function handleSaveClick() {\n    setEdit(false);\n    setSave(true);\n  }\n\n  function handleCancelClick() {\n    setEdit(false);\n    setSave(true);\n    setNewCountry(defaultCountry);\n  }\n\n  return (\n    <div>\n      <b>Country:</b> {save ? newCountry : defaultCountry} {\" \"}\n      {edit && (\n        <select onChange={handleCountryChange}>\n          <option value=\"\">Select...</option>\n          <option value=\"Germany\">Germany</option>\n          <option value=\"Russia\">Russia</option>\n        </select>\n      )}\n      {!edit && (\n        <button disabled={disabled} onClick={handleEditClick}>\n          Edit\n        </button>\n      )}\n      {edit && (\n        <>\n          <button onClick={handleSaveClick}>Save</button>\n          <button onClick={handleCancelClick}>Cancel</button>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Country;\n","import React, { useEffect, useState } from \"react\";\nimport { ADMIN_ROLES } from \"../constants\";\nimport Country from \"./Country\";\n\nfunction UserSearch({ admin }) {\n  const [search, setSearch] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [defaultData, setDefaultData] = useState([]);\n  const [sort, setSort] = useState(localStorage.getItem(\"sort\"));\n\n  useEffect(() => {\n    fetch(\"https://www.mocky.io/v2/5d7f3d17330000204ef0b027?mocky-delay=500ms\")\n      .then(response => response.json())\n      .then(data => {\n        const userData = data.users.map((d, i) => ({ ...d, id: i }));\n        setDefaultData(userData);\n        setData(sort ? sortData(userData, sort) : userData);\n      });\n  }, []);\n\n  function handleChange(e) {\n    setSearch(e.target.value);\n    if (e.target.value.length > 2) {\n      setData(\n        data.filter(user =>\n          user.lastname.toLowerCase().includes(e.target.value)\n        )\n      );\n    } else {\n      setData(defaultData);\n    }\n  }\n\n  function handleSortClick() {\n    const sortType = sort === \"asc\" ? \"desk\" : \"asc\";\n    localStorage.setItem(\"sort\", sortType);\n    setSort(sortType);\n    setData(sortData(data, sortType));\n  }\n\n  function sortData(data, sort) {\n    return data.sort((a, b) =>\n      sort === \"asc\"\n        ? a.lastname.localeCompare(b.lastname)\n        : b.lastname.localeCompare(a.lastname)\n    );\n  }\n\n  return (\n    <div>\n      <p>\n        <label htmlFor=\"user-search\">User search</label>\n        <br />\n        <input type=\"text\" onChange={handleChange} value={search} />\n      </p>\n      {data.length > 0 && (\n        <p>\n          <button onClick={handleSortClick}>Sort by lastname</button>\n        </p>\n      )}\n      <hr />\n      {data.map(user => (\n        <div key={user.id}>\n          <div>\n            <b>Surname:</b> {user.lastname}\n          </div>\n          <div>\n            <Country\n              defaultCountry={user.country}\n              disabled={admin === ADMIN_ROLES.readonlyadmin}\n            />\n          </div>\n          <hr />\n        </div>\n      ))}\n      {data && search.length > 2 && data.length === 0 && (\n        <div>No results match criteria!</div>\n      )}\n    </div>\n  );\n}\n\nexport default UserSearch;\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport UserSearch from \"./components/UserSearch\";\nimport { ADMIN_ROLES } from \"./constants\";\n\nconst pageUrl = \"#usersearch-page\";\n\nfunction App() {\n  const [redirected, setRedirected] = useState(false);\n  const [admin, setAdmin] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  useEffect(() => {\n    setRedirected(window.location.hash === pageUrl);\n    setSuccess(window.location.hash === pageUrl);\n    setAdmin(window.location.hash === pageUrl ? ADMIN_ROLES.crudadmin : \"\");\n  }, []);\n\n  function handleChange(e) {\n    setError(false);\n    setSuccess(false);\n    setAdmin(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    const isValid = ADMIN_ROLES[admin];\n    e.preventDefault();\n    setError(!isValid);\n    setSuccess(isValid);\n\n    if (isValid) {\n      setTimeout(() => {\n        window.location.hash = pageUrl;\n        setRedirected(true);\n      }, 1000);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      {window.location.hash !== pageUrl && (\n        <form onSubmit={handleSubmit} className=\"form\">\n          <section>\n            <label htmlFor=\"â€œadmin-id\">admin-id</label>\n            <br />\n            <input\n              type=\"text\"\n              id=\"admin-id\"\n              name=\"admin-id\"\n              onChange={handleChange}\n              value={admin}\n              required\n            />\n            <button type=\"submit\">login</button>\n            {error && <div className=\"error\">This admin does not exist</div>}\n            {success && <div className=\"success\">Success! Redirecting...</div>}\n          </section>\n        </form>\n      )}\n      {window.location.hash === pageUrl && redirected && success && (\n        <UserSearch admin={admin} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}